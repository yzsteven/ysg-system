<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.model.User">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="role_ids" property="roleIds" jdbcType="VARCHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="cardid" property="cardid" jdbcType="VARCHAR" />
		<result column="position" property="position" jdbcType="VARCHAR" />
		<result column="department" property="department" jdbcType="VARCHAR" />
		<result column="company" property="company" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="locked" property="locked" jdbcType="INTEGER" />
		<result column="contactname" property="contactname" jdbcType="VARCHAR" />
		<result column="contactphone" property="contactphone" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, username, password, salt, role_ids, realname, cardid, position,
		department, company,
		address, age, sex, phone, locked, contactname, contactphone
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectUserByUserName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where username = #{username,jdbcType=VARCHAR} and locked = 0
	</select>


	<select id="selectUsersAll" resultMap="BaseResultMap"
		parameterType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		<where>
				locked = 0
			<if test="search!=null and search != ''">
				AND realname like CONCAT(CONCAT('%', #{search}), '%')
			</if>
			<if test="company!=null and company != ''">
				AND company = #{company}
			</if>
		</where>
		limit #{start},#{end}
	</select>



	<select id="selectCountUserAll" resultType="java.lang.Integer"
		parameterType="java.util.HashMap">
		select
		count(1)
		from sys_user
		<where>
			locked = 0
			<if test="search!=null and company != ''">
				AND realname like CONCAT(CONCAT('%', #{search}), '%')
			</if>
			<if test="company!=null and company != ''">
				AND company = #{company}
			</if>
		</where>
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.model.User">
		insert into sys_user (id, username, password,
		salt, role_ids, realname,
		cardid, position, department,
		company, address, age,
		sex, phone, locked, contactname,
		contactphone)
		values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR}, #{roleIds,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
		#{cardid,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR},
		#{department,jdbcType=VARCHAR},
		#{company,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
		#{sex,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR},
		#{locked,jdbcType=INTEGER}, #{contactname,jdbcType=VARCHAR},
		#{contactphone,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.model.User">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="roleIds != null">
				role_ids,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="cardid != null">
				cardid,
			</if>
			<if test="position != null">
				position,
			</if>
			<if test="department != null">
				department,
			</if>
			<if test="company != null">
				company,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="locked != null">
				locked,
			</if>
			<if test="contactname != null">
				contactname,
			</if>
			<if test="contactphone != null">
				contactphone,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleIds != null">
				#{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="cardid != null">
				#{cardid,jdbcType=VARCHAR},
			</if>
			<if test="position != null">
				#{position,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				#{department,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				#{company,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				#{locked,jdbcType=INTEGER},
			</if>
			<if test="contactname != null">
				#{contactname,jdbcType=VARCHAR},
			</if>
			<if test="contactphone != null">
				#{contactphone,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<update id="updateByUsernameSelective" parameterType="com.model.User">
		update sys_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleIds != null">
				role_ids = #{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="cardid != null">
				cardid = #{cardid,jdbcType=VARCHAR},
			</if>
			<if test="position != null">
				position = #{position,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				locked = #{locked,jdbcType=INTEGER},
			</if>
			<if test="contactname != null">
				contactname = #{contactname,jdbcType=VARCHAR},
			</if>
			<if test="contactphone != null">
				contactphone = #{contactphone,jdbcType=VARCHAR},
			</if>
		</set>
		where username = #{username,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateByPrimaryKeySelective" parameterType="com.model.User">
		update sys_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleIds != null">
				role_ids = #{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="cardid != null">
				cardid = #{cardid,jdbcType=VARCHAR},
			</if>
			<if test="position != null">
				position = #{position,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				locked = #{locked,jdbcType=INTEGER},
			</if>
			<if test="contactname != null">
				contactname = #{contactname,jdbcType=VARCHAR},
			</if>
			<if test="contactphone != null">
				contactphone = #{contactphone,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	
	<update id="updateByPrimaryKey" parameterType="com.model.User">
		update sys_user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		role_ids = #{roleIds,jdbcType=VARCHAR},
		realname = #{realname,jdbcType=VARCHAR},
		cardid = #{cardid,jdbcType=VARCHAR},
		position = #{position,jdbcType=VARCHAR},
		department = #{department,jdbcType=VARCHAR},
		company = #{company,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		sex = #{sex,jdbcType=INTEGER},
		phone = #{phone,jdbcType=VARCHAR},
		locked = #{locked,jdbcType=INTEGER},
		contactname = #{contactname,jdbcType=VARCHAR},
		contactphone = #{contactphone,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>